apiVersion: apps/v1
kind: Deployment
metadata:
  name: myapp
  labels:
    app: myapp
spec:
  replicas: 1
  selector:
    matchLabels:
      app: myapp
  template:
    metadata:
      labels:
        app: myapp
    spec:
      containers:
        - name: myapp
          image: alpine:latest
          command: [ 'sh', '-c', 'while true; do echo "LOGGING" >> /opt/logs.txt; sleep 2; done' ]
          resources: {}
          volumeMounts:
            - mountPath: /opt
              name: data
      initContainers:
        - name: logshipper
          image: alpine:latest
          restartPolicy: Always
          command: [ 'sh', '-c', 'tail -F /opt/logs.txt' ]
          volumeMounts:
            - mountPath: /opt
              name: data
      volumes:
        - name: data
          emptyDir: {}
# ---
# apiVersion: policy/v1
# kind: PodDisruptionBudget
# metadata:
#   name: myapp-pdb
# spec:
#   maxUnavailable: 1
#   selector:
#     matchLabels:
#       app: myapp
# ---